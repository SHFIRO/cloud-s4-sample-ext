<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <name>migratehistoricaldata - Root</name>
    <description>migratehistoricaldata - Root</description>

    <groupId>com.sap.cloud.s4hana</groupId>
    <artifactId>migratehistoricaldata</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    
    <repositories>
    	<!-- download xelem library -->
		<repository>
		    <id>jitpack.io</id>
		    <url>https://jitpack.io</url>
		</repository>
	</repositories>

    <dependencyManagement>
        <dependencies>
        	<!-- Neo - Java EE 7 Web Profile TomEE Runtime -->
            <dependency>
			    <groupId>com.sap.cloud</groupId>
			    <artifactId>neo-javaee7-wp-api</artifactId>
			    <version>1.26.0.1</version>
			</dependency>
	    
	    	<!-- Neo - Java EE 7 Web Profile API -->
	        <dependency>
	            <groupId>javax</groupId>
	            <artifactId>javaee-web-api</artifactId>
	            <version>7.0</version>
	        </dependency>
	        
	        <!-- CloudFoundry TomEE runtime + Java EE 6 API -->
	        <dependency>
				<groupId>org.apache.openejb</groupId>
				<artifactId>tomee-jaxrs</artifactId>
				<version>${tomee.version}</version>
			</dependency>

			<!-- override version 2.0.5 from S/4HANA SDK that conflicts with the project -->            
            <dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>javax.persistence</artifactId>
				<version>2.1.0</version>
            </dependency>
            
            <!-- user accessor and audit logger (Neo) -->
			<dependency>
				<groupId>com.sap.cloud.s4hana.cloudplatform</groupId>
				<artifactId>scp-neo</artifactId>
				<version>${s4hana.sdk.version}</version>
			</dependency>
			
			<!-- user accessor and audit logger (Cloud Foundry) -->
			<dependency>
				<groupId>com.sap.cloud.s4hana.cloudplatform</groupId>
				<artifactId>scp-cf</artifactId>
				<version>${s4hana.sdk.version}</version>
			</dependency>

	        <!-- reference Java Persistence API (JPA) implementation -->
			<dependency>
			    <groupId>org.eclipse.persistence</groupId>
			    <artifactId>eclipselink</artifactId>
			    <version>${eclipselink.version}</version>
			</dependency>

			<!-- Generate JPA Repository patterns code -->			
			<dependency>
			    <groupId>org.apache.deltaspike.modules</groupId>
			    <artifactId>deltaspike-data-module-api</artifactId>
			    <version>${deltaspike.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>org.apache.deltaspike.modules</groupId>
			    <artifactId>deltaspike-data-module-impl</artifactId>
			    <version>${deltaspike.version}</version>
			</dependency>
			
	        <!-- boilerplate code generator -->
			<dependency>
			    <groupId>org.projectlombok</groupId>
			    <artifactId>lombok</artifactId>
			    <version>1.16.20</version>
			</dependency>
			
			<!-- SLF4J logger facade -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<scope>compile</scope>
				<version>1.7.19</version>
			</dependency>
			
			<!-- featured OData server implementation -->
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-jpa-processor-core</artifactId>
				<version>${olingo.version}</version>
			</dependency>
			
			<!-- JAX-RS Implementation (REST server) for Neo -->
			<dependency>
			    <groupId>org.apache.cxf</groupId>
			    <artifactId>cxf-integration-cdi</artifactId>
			    <version>${apache.cxf.version}</version>
			</dependency>
			
			<!-- parse SpreadsheetML Office 2003 XML format -->
			<dependency>
			    <groupId>com.github.VEINHORN</groupId>
			    <artifactId>xelem-wrapper</artifactId>
			    <version>c3e6af2c1f</version>
			</dependency>
			
			<!-- JSON Provider for CXF -->
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			
        </dependencies>        
    </dependencyManagement>

    <properties>
        <java.version>1.8</java.version>
        
        <olingo.version>2.0.10</olingo.version>
        <eclipselink.version>2.6.5</eclipselink.version>
        <deltaspike.version>1.8.1</deltaspike.version>
        <openejb.version>7.0.4</openejb.version>
        <s4hana.sdk.version>2.1.0</s4hana.sdk.version>
        <tomee.version>1.7.5</tomee.version>
        <jackson.version>2.9.5</jackson.version>
        <apache.cxf.version>3.1.14</apache.cxf.version>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.testSource>${java.version}</maven.compiler.testSource>
        <maven.compiler.testTarget>${java.version}</maven.compiler.testTarget>
        
        <maven.license.version>1.16</maven.license.version>

        <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <modules>
        <module>core</module>
		<module>app-cf</module>
		<module>app-neo</module>
        <module>unit-tests</module>
        <module>integration-tests</module>
        <module>ui</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M1</version>
                <executions>
                    <execution>
                        <id>S/4HANA Cloud SDK Project Structure Checks</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.3.9</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                                <reactorModuleConvergence />
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- generate license files -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${maven.license.version}</version>
				<configuration>
					<inceptionYear>2018</inceptionYear>
					<organizationName>SAP SE or an SAP affiliate company</organizationName>
					<!-- update-project-license goal -->
					<licenseFile>LICENSE</licenseFile>
					<licenseName>apache_v2</licenseName>
					<!-- aggregate-add-third-party goal -->
					<outputDirectory>.</outputDirectory>
					<thirdPartyFilename>CREDITS</thirdPartyFilename>
					<fileTemplate>./core/src/main/build/third-party-file.ftl</fileTemplate>
					<sortArtifactByName>true</sortArtifactByName>
				</configuration>
				<executions>	
					<!-- NOTICE file -->						
					<execution>
						<id>update-notice</id>
						<goals>
							<goal>update-project-license</goal>
						</goals>
						<configuration>
							<licenseFile>NOTICE</licenseFile>
							<licenseName>notice</licenseName>
							<force>true</force>
							<licenseResolver>${project.baseUri}/core/src/main/build</licenseResolver>
						</configuration>
					</execution>
					<!-- LICENSE file -->
					<execution>						
						<id>update-project-license</id>
						<goals>
							<goal>update-project-license</goal>							
						</goals>
					</execution>
					<!-- CREDITS file is not generated automatically
					call "mvn clean install license:aggregate-add-third-party" to generate it -->
					<execution>
						<id>aggregate-add-third-party</id>
						<phase>none</phase>
						<goals>
							<goal>aggregate-add-third-party</goal>
						</goals>
					</execution>					
				</executions>
			</plugin>
        </plugins>
    </build>
</project>
